name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ "AnilKumar420-patch-2" ]
  pull_request:
    branches: [ "mymain" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up compiler
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++ clang clang-tidy bear clang-format

    - name: Configure CMake
      run: |
        cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

    - name: Generate compile_commands.json
      run: |
        bear -- cmake --build build

    - name: Verify compile_commands.json
      run: |
        ls -l build/compile_commands.json

    - name: Run Clang-Tidy
      run: |
        clang-tidy src/main.cpp -p build -checks='clang-analyzer-core.NullDereference,modernize-use-auto,readability-identifier-naming,readability-braces-around-statements'

    - name: Check and format code
      run: |
        git diff --name-only --cached | while read file; do clang-format -style=file -i "$file"; done
        clang-tidy -p build -checks='clang-analyzer-core.NullDereference,modernize-use-auto,readability-identifier-naming,readability-braces-around-statements'

    - name: Commit changes
      run: |
        git config --local user.name 'AnilKumar420'
        git config --local user.email 'anilkumar.ratnakaram@gmail.com'
        git add .
        git commit -m 'Formatted code and fixed Clang-Tidy issues'
        git push origin AnilKumar420-patch-2

    - name: Build
      run: |
        cmake --build build
